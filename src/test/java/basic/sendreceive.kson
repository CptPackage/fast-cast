# Warning:
# settings here might be way to agressive for some network stacks
# especially local host performance and behaviour varies wildly depending on OS, OS versione etc.
# also note that some new security interceptors (e.g. reverse packet filtering) might have
# severe drawbacks on multicast. E.g. stock centos 7 localhost can perform very poor both throughput and
# latency wise.
#
# default strat is to start with low pps (like 1000, 2000) and low dgramsize (e.g. 1200).
# to increase throughput then increase pps (=packet per second) stepwise and/or dgramsize.
# throughput/bytes = dgramsize * pps.
# depending on os/network stack, either increasing pps or dgramsize yield to better and more stable results.
# To get real throughput/lowlat use a kernel bypass driver and don't test on localhost.

ClusterConf {

    transports: {
        {
            name:      default

            dgramsize: 4000

            interfaceAddr:   127.0.0.1
            multicastAddr:  229.9.9.9
            port:      45555

            autoFlushMS:     1
            # default is blocking IO, don't do latency tests with this configuration
            # uncomment below for spin looping
            # spinLoopMicros: 10_000_000
            # idleParkMicros: 1000
        }
    }

    topics: {

        {
            id: 1
            name: test

            pub: {
                numPacketHistory: 30_000
                pps: 5_000
                heartbeatInterval: 1000
            }

            sub: {
                receiveBufferPackets: 10_000
                # senderHBTimeout: 5000
                senderHBTimeout: 500000 # avoid crashes during debug
            }
        }

        {
            id: 2
            name: echo

            pub: {
                numPacketHistory: 50_000
                pps: 5_000
                heartbeatInterval: 1000
            }

            sub: {
                receiveBufferPackets: 50_000
                # senderHBTimeout: 5000
                senderHBTimeout: 500000 # avoid crashes during debug
            }
        }

        {
            id: 3
            name: echoresp

            pub: {
                numPacketHistory: 50_000
                pps: 20_000
                ppsWindow: 100
                heartbeatInterval: 10   # testing
            }

            sub: {
                receiveBufferPackets: 50_000
                # senderHBTimeout: 5000
                senderHBTimeout: 500000 # avoid crashes during debug
            }
        }

        {
            id: 4
            name: unreliable
            pub: {
                numPacketHistory: 1_000  # only smallish buffer required for unreliable
                pps: 10_000
                ppsWindow: 100
                heartbeatInterval: 1000
            }

            sub: {
                receiveBufferPackets: 1_000 # small buffer for unreliable
                # senderHBTimeout: 5000
                senderHBTimeout: 500000 # avoid crashes during debug
                unreliable: true
            }
        }
   }

}
# name of cluster
clusterName: pipo

###########################################################################################################
# define technical transport topics
# a transport is defined by a network adapter, a listening address and a port. google 'crosstalking' in case u run unix

transports:

- name: default
  # address of network adapter,
  ifacAdr: 127.0.0.1
  mcastAdr: 230.9.9.10
  port: 45556

  dgramsize: 8000
  # needs to be true in order to run several processes on one machine
  loopBack: true

  # in java we like large buffers to minimize packet loss due to GC jitter
  receiveBufferSize: 25000000
  sendBufferSize: 640000

  #misc
  trafficClass: 8
  ttl: 2

###########################################################################################################
# define separate address+port transport for heartbeats+stats as hi volume might delay heartbeats resulting
# in false drops
#
- name: control
  # address of network adapter,
  ifacAdr: 127.0.0.1
  mcastAdr: 230.9.9.11
  port: 45557

  dgramsize: 8000
  loopBack: true

  # in java we like large buffers to minimize packet loss due to GC :(
  receiveBufferSize: 25000000
  sendBufferSize: 640000

  #misc
  trafficClass: 8
  ttl: 2
  transportType: MCAST_NIO_SOCKET

###########################################################################################################
# ipc transport
#
- name: ipc
  dgramsize: 8000
  # size of shared mem buffer
  receiveBufferSize: 100000000

  #misc
  transportType: MCAST_IPC
  queueFile: /test/queue.bin


########################################################################################
# topics bind service classes to a transport+topic (~topic). think of a topic being a
# separate independent communication  of a transport.
# Each transport can be divided into MCastSocketTransportQueue.MAX_SCOPE separate topics.
# Separation has the benefit, that in case of retransmission (oversaturation/delays) on one topic
# other scopes of the same transport are not affected.
topics:

- name: ping                   #name of
  #transport: default           #name of transport defined above
  transport: ipc                #name of transport defined above

  topic: 0                      #topic on the transport associated with this
  serviceClass: de.ruedigermoeller.fastcast.test.PingService

  numPacketHistory: 20000      #combined size of send history buffer + send queue
  maxSendPacketQueueSize: 1      #how many slots of packageHistory are used as send queue

  receiveBufferPackets: 20000    #number of received packets pre-buffered in case of a gap
  sendPauseMicros: 50           #the smaller the faster, the larger buffers are required (send+receive), the more retransmissions will occur
                                 #if retransmission get to high, throuput will worsen. Tune conservatively

- name: pong                   #name of
  #transport: default           #name of transport defined above
  transport: ipc                #name of transport defined above

  topic: 1                      #topic on the transport associated with this
  serviceClass: de.ruedigermoeller.fastcast.test.PongService

  numPacketHistory: 20000      #combined size of send history buffer + send queue
  maxSendPacketQueueSize: 1      #how many slots of packageHistory are used as send queue

  receiveBufferPackets: 20000    #number of received packets pre-buffered in case of a gap
  sendPauseMicros: 200           #the smaller the faster, the larger buffers are required (send+receive), the more retransmissions will occur
                                 #if retransmission get to high, throuput will worsen. Tune conservatively

